08f07bcc43ab0379ef9f652da774f87f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _reactNative = require("react-native");

var _react = _interopRequireDefault(require("react"));

var _Colors = _interopRequireDefault(require("./Colors"));

var _HermesBadge = _interopRequireDefault(require("./HermesBadge"));

var Header = function Header() {
  var isDarkMode = (0, _reactNative.useColorScheme)() === 'dark';
  return _react.default.createElement(_reactNative.ImageBackground, {
    accessibilityRole: "image",
    testID: "new-app-screen-header",
    source: require('./logo.png'),
    style: [styles.background, {
      backgroundColor: isDarkMode ? _Colors.default.darker : _Colors.default.lighter
    }],
    imageStyle: styles.logo
  }, _react.default.createElement(_HermesBadge.default, null), _react.default.createElement(_reactNative.Text, {
    style: [styles.text, {
      color: isDarkMode ? _Colors.default.white : _Colors.default.black
    }]
  }, "Welcome to", '\n', "React Native"));
};

var styles = _reactNative.StyleSheet.create({
  background: {
    paddingBottom: 40,
    paddingTop: 96,
    paddingHorizontal: 32
  },
  logo: {
    opacity: 0.2,
    overflow: 'visible',
    resizeMode: 'cover',
    marginLeft: -128,
    marginBottom: -192
  },
  text: {
    fontSize: 40,
    fontWeight: '700',
    textAlign: 'center'
  }
});

var _default = Header;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkhlYWRlci5qcyJdLCJuYW1lcyI6WyJIZWFkZXIiLCJpc0RhcmtNb2RlIiwicmVxdWlyZSIsInN0eWxlcyIsImJhY2tncm91bmQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJDb2xvcnMiLCJkYXJrZXIiLCJsaWdodGVyIiwibG9nbyIsInRleHQiLCJjb2xvciIsIndoaXRlIiwiYmxhY2siLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicGFkZGluZ0JvdHRvbSIsInBhZGRpbmdUb3AiLCJwYWRkaW5nSG9yaXpvbnRhbCIsIm9wYWNpdHkiLCJvdmVyZmxvdyIsInJlc2l6ZU1vZGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luQm90dG9tIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwidGV4dEFsaWduIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLFNBQVRBLE1BQVMsR0FBWTtBQUN6QixNQUFNQyxVQUFVLEdBQUcsdUNBQXFCLE1BQXhDO0FBQ0EsU0FDRSw2QkFBQyw0QkFBRDtBQUNFLElBQUEsaUJBQWlCLEVBQUMsT0FEcEI7QUFFRSxJQUFBLE1BQU0sRUFBQyx1QkFGVDtBQUdFLElBQUEsTUFBTSxFQUFFQyxPQUFPLENBQUMsWUFBRCxDQUhqQjtBQUlFLElBQUEsS0FBSyxFQUFFLENBQ0xDLE1BQU0sQ0FBQ0MsVUFERixFQUVMO0FBQ0VDLE1BQUFBLGVBQWUsRUFBRUosVUFBVSxHQUFHSyxnQkFBT0MsTUFBVixHQUFtQkQsZ0JBQU9FO0FBRHZELEtBRkssQ0FKVDtBQVVFLElBQUEsVUFBVSxFQUFFTCxNQUFNLENBQUNNO0FBVnJCLEtBV0UsNkJBQUMsb0JBQUQsT0FYRixFQVlFLDZCQUFDLGlCQUFEO0FBQ0UsSUFBQSxLQUFLLEVBQUUsQ0FDTE4sTUFBTSxDQUFDTyxJQURGLEVBRUw7QUFDRUMsTUFBQUEsS0FBSyxFQUFFVixVQUFVLEdBQUdLLGdCQUFPTSxLQUFWLEdBQWtCTixnQkFBT087QUFENUMsS0FGSztBQURULG1CQVFHLElBUkgsaUJBWkYsQ0FERjtBQTBCRCxDQTVCRDs7QUE4QkEsSUFBTVYsTUFBTSxHQUFHVyx3QkFBV0MsTUFBWCxDQUFrQjtBQUMvQlgsRUFBQUEsVUFBVSxFQUFFO0FBQ1ZZLElBQUFBLGFBQWEsRUFBRSxFQURMO0FBRVZDLElBQUFBLFVBQVUsRUFBRSxFQUZGO0FBR1ZDLElBQUFBLGlCQUFpQixFQUFFO0FBSFQsR0FEbUI7QUFNL0JULEVBQUFBLElBQUksRUFBRTtBQUNKVSxJQUFBQSxPQUFPLEVBQUUsR0FETDtBQUVKQyxJQUFBQSxRQUFRLEVBQUUsU0FGTjtBQUdKQyxJQUFBQSxVQUFVLEVBQUUsT0FIUjtBQVVKQyxJQUFBQSxVQUFVLEVBQUUsQ0FBQyxHQVZUO0FBV0pDLElBQUFBLFlBQVksRUFBRSxDQUFDO0FBWFgsR0FOeUI7QUFtQi9CYixFQUFBQSxJQUFJLEVBQUU7QUFDSmMsSUFBQUEsUUFBUSxFQUFFLEVBRE47QUFFSkMsSUFBQUEsVUFBVSxFQUFFLEtBRlI7QUFHSkMsSUFBQUEsU0FBUyxFQUFFO0FBSFA7QUFuQnlCLENBQWxCLENBQWY7O2VBMEJlMUIsTSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IHR5cGUge05vZGV9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7SW1hZ2VCYWNrZ3JvdW5kLCBTdHlsZVNoZWV0LCBUZXh0LCB1c2VDb2xvclNjaGVtZX0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ29sb3JzIGZyb20gJy4vQ29sb3JzJztcbmltcG9ydCBIZXJtZXNCYWRnZSBmcm9tICcuL0hlcm1lc0JhZGdlJztcblxuY29uc3QgSGVhZGVyID0gKCk6IE5vZGUgPT4ge1xuICBjb25zdCBpc0RhcmtNb2RlID0gdXNlQ29sb3JTY2hlbWUoKSA9PT0gJ2RhcmsnO1xuICByZXR1cm4gKFxuICAgIDxJbWFnZUJhY2tncm91bmRcbiAgICAgIGFjY2Vzc2liaWxpdHlSb2xlPVwiaW1hZ2VcIlxuICAgICAgdGVzdElEPVwibmV3LWFwcC1zY3JlZW4taGVhZGVyXCJcbiAgICAgIHNvdXJjZT17cmVxdWlyZSgnLi9sb2dvLnBuZycpfVxuICAgICAgc3R5bGU9e1tcbiAgICAgICAgc3R5bGVzLmJhY2tncm91bmQsXG4gICAgICAgIHtcbiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGlzRGFya01vZGUgPyBDb2xvcnMuZGFya2VyIDogQ29sb3JzLmxpZ2h0ZXIsXG4gICAgICAgIH0sXG4gICAgICBdfVxuICAgICAgaW1hZ2VTdHlsZT17c3R5bGVzLmxvZ299PlxuICAgICAgPEhlcm1lc0JhZGdlIC8+XG4gICAgICA8VGV4dFxuICAgICAgICBzdHlsZT17W1xuICAgICAgICAgIHN0eWxlcy50ZXh0LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNvbG9yOiBpc0RhcmtNb2RlID8gQ29sb3JzLndoaXRlIDogQ29sb3JzLmJsYWNrLFxuICAgICAgICAgIH0sXG4gICAgICAgIF19PlxuICAgICAgICBXZWxjb21lIHRvXG4gICAgICAgIHsnXFxuJ31cbiAgICAgICAgUmVhY3QgTmF0aXZlXG4gICAgICA8L1RleHQ+XG4gICAgPC9JbWFnZUJhY2tncm91bmQ+XG4gICk7XG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIGJhY2tncm91bmQ6IHtcbiAgICBwYWRkaW5nQm90dG9tOiA0MCxcbiAgICBwYWRkaW5nVG9wOiA5NixcbiAgICBwYWRkaW5nSG9yaXpvbnRhbDogMzIsXG4gIH0sXG4gIGxvZ286IHtcbiAgICBvcGFjaXR5OiAwLjIsXG4gICAgb3ZlcmZsb3c6ICd2aXNpYmxlJyxcbiAgICByZXNpemVNb2RlOiAnY292ZXInLFxuICAgIC8qXG4gICAgICogVGhlc2UgbmVnYXRpdmUgbWFyZ2lucyBhbGxvdyB0aGUgaW1hZ2UgdG8gYmUgb2Zmc2V0IHNpbWlsYXJseSBhY3Jvc3Mgc2NyZWVuIHNpemVzIGFuZCBjb21wb25lbnQgc2l6ZXMuXG4gICAgICpcbiAgICAgKiBUaGUgc291cmNlIGxvZ28ucG5nIGltYWdlIGlzIDUxMng1MTJweCwgc28gYXMgc3VjaCwgdGhlc2UgbWFyZ2lucyBhdHRlbXB0IHRvIGJlIHJlbGF0aXZlIHRvIHRoZVxuICAgICAqIHNvdXJjZSBpbWFnZSdzIHNpemUuXG4gICAgICovXG4gICAgbWFyZ2luTGVmdDogLTEyOCxcbiAgICBtYXJnaW5Cb3R0b206IC0xOTIsXG4gIH0sXG4gIHRleHQ6IHtcbiAgICBmb250U2l6ZTogNDAsXG4gICAgZm9udFdlaWdodDogJzcwMCcsXG4gICAgdGV4dEFsaWduOiAnY2VudGVyJyxcbiAgfSxcbn0pO1xuXG5leHBvcnQgZGVmYXVsdCBIZWFkZXI7XG4iXX0=