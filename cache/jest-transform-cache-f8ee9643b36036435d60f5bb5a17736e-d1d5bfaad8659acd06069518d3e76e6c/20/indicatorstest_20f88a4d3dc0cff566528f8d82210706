a10281134b5901667595d922f8e12fed
_getJestObj().mock('axios');

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _axios = _interopRequireDefault(require("axios"));

var _Indicators = require("../src/API/Repository/Indicators");

function _getJestObj() {
  var _require = require("@jest/globals"),
      jest = _require.jest;

  _getJestObj = function _getJestObj() {
    return jest;
  };

  return jest;
}

test('get al indicators', function _callee() {
  var indicators, payload;
  return _regenerator.default.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          indicators = {
            version: '1.7.0',
            autor: 'mindicador.cl',
            fecha: '2022-01-06T21:00:00.000Z',
            uf: {
              codigo: 'uf',
              nombre: 'Unidad de fomento (UF)',
              unidad_medida: 'Pesos',
              fecha: '2022-01-06T03:00:00.000Z',
              valor: 31021.67
            },
            ivp: {
              codigo: 'ivp',
              nombre: 'Indice de valor promedio (IVP)',
              unidad_medida: 'Pesos',
              fecha: '2022-01-06T03:00:00.000Z',
              valor: 31797.28
            }
          };
          payload = {
            data: indicators
          };
          _axios.default.get = jest.fn().mockResolvedValue(payload);
          _context.next = 5;
          return _regenerator.default.awrap(expect((0, _Indicators.findAllIndicators)()).resolves.toEqual(indicators));

        case 5:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, null, Promise);
});
test('get one indicator', function _callee2() {
  var indicator, payload;
  return _regenerator.default.async(function _callee2$(_context2) {
    while (1) {
      switch (_context2.prev = _context2.next) {
        case 0:
          indicator = {
            version: '1.7.0',
            autor: 'mindicador.cl',
            codigo: 'uf',
            nombre: 'Unidad de fomento (UF)',
            unidad_medida: 'Pesos',
            serie: [{
              fecha: '2022-01-06T03:00:00.000Z',
              valor: 31021.67
            }, {
              fecha: '2022-01-05T03:00:00.000Z',
              valor: 31016.68
            }]
          };
          payload = {
            data: indicator
          };
          _axios.default.get = jest.fn().mockResolvedValue(payload);
          _context2.next = 5;
          return _regenerator.default.awrap(expect((0, _Indicators.findOneIndicatorByName)('uf')).resolves.toEqual(indicator));

        case 5:
        case "end":
          return _context2.stop();
      }
    }
  }, null, null, null, Promise);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGljYXRvcnMudGVzdC5qcyJdLCJuYW1lcyI6WyJtb2NrIiwidGVzdCIsImluZGljYXRvcnMiLCJ2ZXJzaW9uIiwiYXV0b3IiLCJmZWNoYSIsInVmIiwiY29kaWdvIiwibm9tYnJlIiwidW5pZGFkX21lZGlkYSIsInZhbG9yIiwiaXZwIiwicGF5bG9hZCIsImRhdGEiLCJheGlvcyIsImdldCIsImplc3QiLCJmbiIsIm1vY2tSZXNvbHZlZFZhbHVlIiwiZXhwZWN0IiwicmVzb2x2ZXMiLCJ0b0VxdWFsIiwiaW5kaWNhdG9yIiwic2VyaWUiXSwibWFwcGluZ3MiOiJBQU9BLGNBQUtBLElBQUwsQ0FBVSxPQUFWOzs7Ozs7QUFQQTs7QUFDQTs7Ozs7Ozs7Ozs7OztBQU9BQyxJQUFJLENBQUMsbUJBQUQsRUFBc0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ2xCQyxVQUFBQSxVQURrQixHQUNMO0FBQ2pCQyxZQUFBQSxPQUFPLEVBQUUsT0FEUTtBQUVqQkMsWUFBQUEsS0FBSyxFQUFFLGVBRlU7QUFHakJDLFlBQUFBLEtBQUssRUFBRSwwQkFIVTtBQUlqQkMsWUFBQUEsRUFBRSxFQUFFO0FBQ0ZDLGNBQUFBLE1BQU0sRUFBRSxJQUROO0FBRUZDLGNBQUFBLE1BQU0sRUFBRSx3QkFGTjtBQUdGQyxjQUFBQSxhQUFhLEVBQUUsT0FIYjtBQUlGSixjQUFBQSxLQUFLLEVBQUUsMEJBSkw7QUFLRkssY0FBQUEsS0FBSyxFQUFFO0FBTEwsYUFKYTtBQVdqQkMsWUFBQUEsR0FBRyxFQUFFO0FBQ0hKLGNBQUFBLE1BQU0sRUFBRSxLQURMO0FBRUhDLGNBQUFBLE1BQU0sRUFBRSxnQ0FGTDtBQUdIQyxjQUFBQSxhQUFhLEVBQUUsT0FIWjtBQUlISixjQUFBQSxLQUFLLEVBQUUsMEJBSko7QUFLSEssY0FBQUEsS0FBSyxFQUFFO0FBTEo7QUFYWSxXQURLO0FBb0JsQkUsVUFBQUEsT0FwQmtCLEdBb0JSO0FBQUNDLFlBQUFBLElBQUksRUFBRVg7QUFBUCxXQXBCUTtBQXNCeEJZLHlCQUFNQyxHQUFOLEdBQVlDLElBQUksQ0FBQ0MsRUFBTCxHQUFVQyxpQkFBVixDQUE0Qk4sT0FBNUIsQ0FBWjtBQXRCd0I7QUFBQSw0Q0F1QmxCTyxNQUFNLENBQUMsb0NBQUQsQ0FBTixDQUE0QkMsUUFBNUIsQ0FBcUNDLE9BQXJDLENBQTZDbkIsVUFBN0MsQ0F2QmtCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXRCLENBQUo7QUEwQkFELElBQUksQ0FBQyxtQkFBRCxFQUFzQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDbEJxQixVQUFBQSxTQURrQixHQUNOO0FBQ2hCbkIsWUFBQUEsT0FBTyxFQUFFLE9BRE87QUFFaEJDLFlBQUFBLEtBQUssRUFBRSxlQUZTO0FBR2hCRyxZQUFBQSxNQUFNLEVBQUUsSUFIUTtBQUloQkMsWUFBQUEsTUFBTSxFQUFFLHdCQUpRO0FBS2hCQyxZQUFBQSxhQUFhLEVBQUUsT0FMQztBQU1oQmMsWUFBQUEsS0FBSyxFQUFFLENBQ0w7QUFDRWxCLGNBQUFBLEtBQUssRUFBRSwwQkFEVDtBQUVFSyxjQUFBQSxLQUFLLEVBQUU7QUFGVCxhQURLLEVBS0w7QUFDRUwsY0FBQUEsS0FBSyxFQUFFLDBCQURUO0FBRUVLLGNBQUFBLEtBQUssRUFBRTtBQUZULGFBTEs7QUFOUyxXQURNO0FBa0JsQkUsVUFBQUEsT0FsQmtCLEdBa0JSO0FBQUNDLFlBQUFBLElBQUksRUFBRVM7QUFBUCxXQWxCUTtBQW9CeEJSLHlCQUFNQyxHQUFOLEdBQVlDLElBQUksQ0FBQ0MsRUFBTCxHQUFVQyxpQkFBVixDQUE0Qk4sT0FBNUIsQ0FBWjtBQXBCd0I7QUFBQSw0Q0FxQmxCTyxNQUFNLENBQUMsd0NBQXVCLElBQXZCLENBQUQsQ0FBTixDQUFxQ0MsUUFBckMsQ0FBOENDLE9BQTlDLENBQXNEQyxTQUF0RCxDQXJCa0I7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBdEIsQ0FBSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XG5pbXBvcnQge1xuICBmaW5kQWxsSW5kaWNhdG9ycyxcbiAgZmluZE9uZUluZGljYXRvckJ5TmFtZSxcbn0gZnJvbSAnLi4vc3JjL0FQSS9SZXBvc2l0b3J5L0luZGljYXRvcnMnO1xuXG4vLyBOb3RpY2UgaG93IGBjcmVhdGVgIHdhcyBub3QgYmVpbmcgbW9ja2VkIGhlcmUuLi5cbmplc3QubW9jaygnYXhpb3MnKTtcbnRlc3QoJ2dldCBhbCBpbmRpY2F0b3JzJywgYXN5bmMgKCkgPT4ge1xuICBjb25zdCBpbmRpY2F0b3JzID0ge1xuICAgIHZlcnNpb246ICcxLjcuMCcsXG4gICAgYXV0b3I6ICdtaW5kaWNhZG9yLmNsJyxcbiAgICBmZWNoYTogJzIwMjItMDEtMDZUMjE6MDA6MDAuMDAwWicsXG4gICAgdWY6IHtcbiAgICAgIGNvZGlnbzogJ3VmJyxcbiAgICAgIG5vbWJyZTogJ1VuaWRhZCBkZSBmb21lbnRvIChVRiknLFxuICAgICAgdW5pZGFkX21lZGlkYTogJ1Blc29zJyxcbiAgICAgIGZlY2hhOiAnMjAyMi0wMS0wNlQwMzowMDowMC4wMDBaJyxcbiAgICAgIHZhbG9yOiAzMTAyMS42NyxcbiAgICB9LFxuICAgIGl2cDoge1xuICAgICAgY29kaWdvOiAnaXZwJyxcbiAgICAgIG5vbWJyZTogJ0luZGljZSBkZSB2YWxvciBwcm9tZWRpbyAoSVZQKScsXG4gICAgICB1bmlkYWRfbWVkaWRhOiAnUGVzb3MnLFxuICAgICAgZmVjaGE6ICcyMDIyLTAxLTA2VDAzOjAwOjAwLjAwMFonLFxuICAgICAgdmFsb3I6IDMxNzk3LjI4LFxuICAgIH0sXG4gIH07XG4gIGNvbnN0IHBheWxvYWQgPSB7ZGF0YTogaW5kaWNhdG9yc307XG4gIC8vIE5vdyBtb2NrIGF4aW9zIGdldCBtZXRob2RcbiAgYXhpb3MuZ2V0ID0gamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKHBheWxvYWQpO1xuICBhd2FpdCBleHBlY3QoZmluZEFsbEluZGljYXRvcnMoKSkucmVzb2x2ZXMudG9FcXVhbChpbmRpY2F0b3JzKTtcbn0pO1xuXG50ZXN0KCdnZXQgb25lIGluZGljYXRvcicsIGFzeW5jICgpID0+IHtcbiAgY29uc3QgaW5kaWNhdG9yID0ge1xuICAgIHZlcnNpb246ICcxLjcuMCcsXG4gICAgYXV0b3I6ICdtaW5kaWNhZG9yLmNsJyxcbiAgICBjb2RpZ286ICd1ZicsXG4gICAgbm9tYnJlOiAnVW5pZGFkIGRlIGZvbWVudG8gKFVGKScsXG4gICAgdW5pZGFkX21lZGlkYTogJ1Blc29zJyxcbiAgICBzZXJpZTogW1xuICAgICAge1xuICAgICAgICBmZWNoYTogJzIwMjItMDEtMDZUMDM6MDA6MDAuMDAwWicsXG4gICAgICAgIHZhbG9yOiAzMTAyMS42NyxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGZlY2hhOiAnMjAyMi0wMS0wNVQwMzowMDowMC4wMDBaJyxcbiAgICAgICAgdmFsb3I6IDMxMDE2LjY4LFxuICAgICAgfSxcbiAgICBdLFxuICB9O1xuICBjb25zdCBwYXlsb2FkID0ge2RhdGE6IGluZGljYXRvcn07XG4gIC8vIE5vdyBtb2NrIGF4aW9zIGdldCBtZXRob2RcbiAgYXhpb3MuZ2V0ID0gamVzdC5mbigpLm1vY2tSZXNvbHZlZFZhbHVlKHBheWxvYWQpO1xuICBhd2FpdCBleHBlY3QoZmluZE9uZUluZGljYXRvckJ5TmFtZSgndWYnKSkucmVzb2x2ZXMudG9FcXVhbChpbmRpY2F0b3IpO1xufSk7XG4iXX0=